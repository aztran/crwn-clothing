{"ast":null,"code":"import _objectSpread from \"/Users/andrariztyan/MyProject/react/course2019/ecommerce-zhang/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport cartActionTypes from \"./cart.type\";\nimport { addItemToCart, removeItemFromCart } from \"./cart.utils\";\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case cartActionTypes.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n\n    case cartActionTypes.ADD_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      });\n\n    case cartActionTypes.REMOVE_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      });\n\n    case cartActionTypes.CLEAR_ITEM_FROM_CART:\n      return _objectSpread({}, state, {\n        cartItems: state.cartItems.filter(item => item.id !== action.payload.id)\n      });\n\n    case cartActionTypes.CLEAR_CART:\n      return _objectSpread({}, state, {\n        cartItems: []\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/andrariztyan/MyProject/react/course2019/ecommerce-zhang/crwn-clothing/src/redux/cart/cart.reducer.jsx"],"names":["cartActionTypes","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","REMOVE_ITEM","CLEAR_ITEM_FROM_CART","filter","item","id","CLEAR_CART"],"mappings":";AAAA,OAAOA,eAAP,MAA4B,aAA5B;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,cAAlD;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,eAAe,CAACU,kBAArB;AACE,+BACKH,KADL;AAEEH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFjB;;AAIF,SAAKJ,eAAe,CAACW,QAArB;AACE,+BACKJ,KADL;AAEEF,QAAAA,SAAS,EAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAF1B;;AAIF,SAAKZ,eAAe,CAACa,WAArB;AACE,+BACKN,KADL;AAEEF,QAAAA,SAAS,EAAEH,kBAAkB,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAF/B;;AAIF,SAAKZ,eAAe,CAACc,oBAArB;AACE,+BACKP,KADL;AAEEF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBU,MAAhB,CAAuBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYT,MAAM,CAACI,OAAP,CAAeK,EAA1D;AAFb;;AAIF,SAAKjB,eAAe,CAACkB,UAArB;AACE,+BACKX,KADL;AAEEF,QAAAA,SAAS,EAAE;AAFb;;AAIF;AACE,aAAOE,KAAP;AA3BJ;AA6BD,CA9BD;;AAgCA,eAAeD,WAAf","sourcesContent":["import cartActionTypes from \"./cart.type\";\nimport { addItemToCart, removeItemFromCart } from \"./cart.utils\";\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case cartActionTypes.TOGGLE_CART_HIDDEN:\n      return {\n        ...state,\n        hidden: !state.hidden\n      };\n    case cartActionTypes.ADD_ITEM:\n      return {\n        ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      };\n    case cartActionTypes.REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      };\n    case cartActionTypes.CLEAR_ITEM_FROM_CART:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(item => item.id !== action.payload.id)\n      };\n    case cartActionTypes.CLEAR_CART:\n      return {\n        ...state,\n        cartItems: []\n      };\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n"]},"metadata":{},"sourceType":"module"}