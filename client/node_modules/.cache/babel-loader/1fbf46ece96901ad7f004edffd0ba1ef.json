{"ast":null,"code":"import _objectSpread from \"/Users/andrariztyan/MyProject/react/course2019/ecommerce-zhang/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport userActionTypes from \"./user.type\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport { googleSignInSuccess, googleSignInFailure } from \"./user.actions\";\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user; // console.log(userRef);\n\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["/Users/andrariztyan/MyProject/react/course2019/ecommerce-zhang/crwn-clothing/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","userActionTypes","auth","googleProvider","createUserProfileDocument","googleSignInSuccess","googleSignInFailure","signInWithGoogle","signInWithPopup","user","userRef","userSnapshot","get","id","data","error","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSaga"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,+BAJP;AAMA,SAASC,mBAAT,EAA8BC,mBAA9B,QAAyD,gBAAzD;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAClC,MAAI;AAAA,iBACe,MAAML,IAAI,CAACM,eAAL,CAAqBL,cAArB,CADrB;AAAA,UACMM,IADN,QACMA,IADN,EAEF;;;AACA,UAAMC,OAAO,GAAG,MAAMV,IAAI,CAACI,yBAAD,EAA4BK,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMd,GAAG,CACPO,mBAAmB;AAAGQ,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EADZ,CAAT;AAGD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMjB,GAAG,CAACQ,mBAAmB,CAACS,KAAD,CAApB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,mBAAV,GAAgC;AACrC,QAAMnB,UAAU,CAACI,eAAe,CAACgB,oBAAjB,EAAuCV,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUW,QAAV,GAAqB;AAC1B,QAAMnB,GAAG,CAAC,CAACC,IAAI,CAACgB,mBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport userActionTypes from \"./user.type\";\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument\n} from \"../../firebase/firebase.utils\";\n\nimport { googleSignInSuccess, googleSignInFailure } from \"./user.actions\";\n\nexport function* signInWithGoogle() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    // console.log(userRef);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(\n      googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() })\n    );\n  } catch (error) {\n    yield put(googleSignInFailure(error));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(userActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}